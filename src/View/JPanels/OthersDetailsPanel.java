/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.JPanels;

import Controllers.BillsController;
import Controllers.OrdersDetailsController;
import Models.Entities.OrderDetails;
import Models.EntitiesManagers.BillsManager;
import Models.EntitiesManagers.OrdersDetailsManager;
import Models.EntitiesManagers.StockManager;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mawena
 */
public class OthersDetailsPanel extends javax.swing.JPanel {

    /**
     * Creates new form StockPanel
     */
    
    public int idOrder;
    public OthersDetailsPanel(int orderId) {
        initComponents();
        ArrayList<OrderDetails> orderList = OrdersDetailsManager.getByOrder(orderId);
        orderDetailsTable.setModel(OrdersDetailsManager.toTableModel(orderList));
        StockTable.setModel(StockManager.toTableModel(StockManager.getAll()));
        this.idOrder = orderId;
        disableButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JScrollPane();
        orderDetailsTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        Illustration = new javax.swing.JLabel();
        tab1 = new javax.swing.JScrollPane();
        StockTable = new javax.swing.JTable();
        Quantity = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(255, 255, 255));

        orderDetailsTable.setBackground(new java.awt.Color(255, 255, 255));
        orderDetailsTable.setForeground(new java.awt.Color(34, 67, 128));
        orderDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderDetailsTableMouseClicked(evt);
            }
        });
        tab.setViewportView(orderDetailsTable);

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setForeground(new java.awt.Color(34, 67, 128));
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add-min-new.png"))); // NOI18N
        addButton.setText("Ajouter");
        addButton.setBorder(null);
        addButton.setBorderPainted(false);
        addButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(255, 255, 255));
        updateButton.setForeground(new java.awt.Color(34, 67, 128));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/update-min.png"))); // NOI18N
        updateButton.setText("Mettre à jour");
        updateButton.setBorder(null);
        updateButton.setBorderPainted(false);
        updateButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 255, 255));
        deleteButton.setForeground(new java.awt.Color(34, 67, 128));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/delete-min-new.png"))); // NOI18N
        deleteButton.setText("Suprimer");
        deleteButton.setBorder(null);
        deleteButton.setBorderPainted(false);
        deleteButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        Illustration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Images/Facture.png"))); // NOI18N

        StockTable.setBackground(new java.awt.Color(255, 255, 255));
        StockTable.setForeground(new java.awt.Color(34, 67, 128));
        StockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        StockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockTableMouseClicked(evt);
            }
        });
        tab1.setViewportView(StockTable);

        Quantity.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        Quantity.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));
        Quantity.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quantité", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(34, 67, 128))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Quantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Illustration)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 124, Short.MAX_VALUE))
                    .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Illustration, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void disableButton() {
        updateButton.setVisible(false);
        deleteButton.setVisible(false);
        addButton.setVisible(false);
    }

    /*public boolean good() {
        if (OrderId.getSelectedItem().toString().equals("Tout")) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner un numéro de commande valide!");
            return false;
        } else {
            try {
                Date dateTmp = new SimpleDateFormat("yyyy-MM-dd").parse(((JTextField) DateBill.getDateEditor().getUiComponent()).getText());
                LocalDate currentDate = LocalDate.now();
                LocalDate date = dateTmp.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                if (currentDate.isBefore(date)) {
                    JOptionPane.showMessageDialog(null, "La date ne peut dépasser le jour actuelle: " + currentDate);
                    return false;
                } else {
                    try {
                        Double.parseDouble(AmoutPaid.getText());
                        return true;
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Le prix doit être un chiffre!");
                        return false;
                    }
                }
            } catch (ParseException ex) {
                return false;
            }
        }
    }*/


    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        disableButton();
        int myIndex = orderDetailsTable.getSelectedRow();
        if (myIndex == -1) {
            JOptionPane.showMessageDialog(null, "Aucune ligne du tableau n'est sélectionné");
        } else {
            DefaultTableModel model = (DefaultTableModel) StockTable.getModel();
            OrderDetails orderDetails = new OrderDetails(this.idOrder, Integer.parseInt(model.getValueAt(myIndex, 0).toString()), model.getValueAt(myIndex, 3).toString(), (int) Quantity.getValue());
            if ( OrdersDetailsController.destroy(orderDetails) ) {
                StockTable.setModel(StockManager.toTableModel(StockManager.getAll()));
                orderDetailsTable.setModel(OrdersDetailsManager.toTableModel(OrdersDetailsManager.getByOrder(this.idOrder) ));
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void orderDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderDetailsTableMouseClicked
        deleteButton.setVisible(true);
        updateButton.setVisible(false);
        addButton.setVisible(false);
    }//GEN-LAST:event_orderDetailsTableMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        disableButton();
        int myIndex = StockTable.getSelectedRow();
        if (myIndex == -1) {
            JOptionPane.showMessageDialog(null, "Aucune ligne du tableau n'est sélectionné");
        } else {
            DefaultTableModel model = (DefaultTableModel) StockTable.getModel();
            OrderDetails orderDetails = new OrderDetails(this.idOrder, Integer.parseInt(model.getValueAt(myIndex, 0).toString()), model.getValueAt(myIndex, 3).toString(), (int) Quantity.getValue());
            if ( OrdersDetailsController.store(orderDetails) ) {
                StockTable.setModel(StockManager.toTableModel(StockManager.getAll()));
                orderDetailsTable.setModel(OrdersDetailsManager.toTableModel(OrdersDetailsManager.getByOrder(this.idOrder) ));
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void StockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockTableMouseClicked
        addButton.setVisible(true);
        updateButton.setVisible(false);
        deleteButton.setVisible(false);
    }//GEN-LAST:event_StockTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Illustration;
    private javax.swing.JSpinner Quantity;
    private javax.swing.JTable StockTable;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable orderDetailsTable;
    private javax.swing.JScrollPane tab;
    private javax.swing.JScrollPane tab1;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
